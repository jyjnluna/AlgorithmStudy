/*
문제
동물원에서 막 탈출한 원숭이 한 마리가 세상구경을 하고 있다. 그 녀석은 원주 부근을 돌아다니다가 코레스코 콘도에서 아주 재밌는 놀이를 발견했다. 그 놀이의 이름은 바로 “꼬리를 무는 숫자 나열”. 이제부터 원숭이가 그토록 좋아하던 그 놀이를 파헤쳐보자.

놀이의 방법은 간단하다. 일단 4줄짜리 표에 왼쪽부터 수를 아래로 1부터 순서대로 적어나간다.

이제 원숭이는 두 개의 자연수를 아무거나 생각한다. 그리고 숫자판에서 두 개의 자연수 사이의 직각거리를 구하면 된다. 여기서 직각거리는 동서방향거리와 남북방향거리의 합을 뜻한다.

예를 들어 저 숫자판에서 11과 33을 생각했다고 하자. 그렇다면 11과 33사이의 직각거리는 8이 된다.(동서방향거리 : 6, 남북방향거리 : 2)

하지만 원숭이는 지금 혼란스럽다. 동물원에서 탈출한지 얼마 되지 않아서 계산을 할 수 없는 경지에 이르렀다. 여러분이 불쌍한 원숭이를 좀 도와줘야겠다. 원숭이가 생각한 두 자연수 사이의 직각거리를 구하는 프로그램을 작성하시오.

입력
첫째 줄에 원숭이가 생각한 두 개의 자연수가 주어진다. 각 수는 10,000,000 이하이다.

출력
첫째 줄에 원숭이가 생각한 두 개의 자연수 사이의 직각거리를 출력한다.
*/

import java.util.Scanner;

public class Baekjoon1598 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int A = sc.nextInt(); // 첫번째 숫자
		int B = sc.nextInt(); // 두번째 숫자
		
		int x1,x2,y1,y2; // x1,y1 = 첫번째 숫자의 좌표, y1,y2 = 두번째 숫자의 좌표
		
		if(A % 4 == 0) {
			x1 = A / 4;  // 입력값이 4의 배수이면 나머지가 0이 나오기 때문에 몫을 가져와서 x좌표에 저장한다.
			y1 = 1; // 입력값이 4의 배수이면 나머지가 0이 나오기 때문에 y좌표를 1로 고정한다.
		}
		
		else {
			x1 = (A / 4) + 1; // 4의 배수가 아니라면 1을 더해준다.
			y1 = 5 - (A % 4); // 4의 배수가 아니라면 5에서 4를 나눈 나머지를 뺀다.
		}
		
		// 위와 동일한 과정
		if(B % 4 == 0) {
			x2 = B / 4;
			y2 = 1;
		}
		
		else {
			x2 = (B / 4) + 1;
			y2 = 5 - (B % 4);
		}
		
		System.out.println(Math.abs(x2 - x1) + Math.abs(y2 - y1)); // 두 좌표 중 어느 값이 큰 지 모르기 때문에 절댓값을 넣어주어 계산한다.
		
	}

}
